{"ast":null,"code":"var _jsxFileName = \"/home/berna/\\xC1rea de Trabalho/desafio-configr-teste/src/components/Comp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Issues from './Issues';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Comp() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [selected, setSelected] = useState('');\n  const [clicked, setClicked] = useState('');\n  const [status, setStatus] = useState('open');\n  const [statusClicked, setStatusClicked] = useState('open');\n  const [label, setLabel] = useState('');\n  const [labelClicked, setLabelClicked] = useState('');\n\n  function apiFetch() {\n    const fetchApi = fetch(\"https://api.github.com/repos/facebook/react/issues\").then(response => response.json()).then(result => {\n      const data = [];\n      result.map(elem => {\n        const elemLimpo = {\n          title: elem.title,\n          labels: elem.labels,\n          comments: elem.comments,\n          state: elem.state,\n          created_at: elem.created_at\n        };\n        data.push(elemLimpo);\n      });\n      return setData(data);\n    });\n    return fetchApi;\n  }\n\n  function mapComments() {\n    data.sort(function (a, b) {\n      return b.comments > a.comments ? 1 : a.comments > b.comments ? -1 : 0;\n    });\n    setData([...data]);\n  }\n\n  function mapOlders() {\n    data.sort(function (a, b) {\n      return a.created_at < b.created_at ? -1 : a.created_at > b.created_at ? 1 : 0;\n    });\n    setData([...data]);\n  }\n\n  function mapNews() {\n    data.sort(function (a, b) {\n      return b.created_at < a.created_at ? -1 : b.created_at > a.created_at ? 1 : 0;\n    });\n    setData([...data]);\n  }\n\n  useEffect(() => {\n    apiFetch();\n  }, []);\n  useEffect(() => {\n    if (clicked === 'comentados') {\n      console.log(data);\n      mapComments();\n    }\n\n    if (clicked === 'antigos') {\n      mapOlders();\n    }\n\n    if (clicked === 'recentes') {\n      mapNews();\n    }\n  }, [clicked]);\n  useEffect(() => {\n    {\n      /*\n       Pegar o Label clicked\n       (1º nível - data) (forEach) Percorrer o array de issues na chave labels (array)\n       (2º nível - label) (filter com includes)Verificar caso a caso se a label bate com o item do array label\n      */\n    }\n    console.log(label);\n    const map = [];\n    data.forEach(element => element.labels.forEach(elem => {\n      if (elem['name'].includes(label)) {\n        map.push(elem);\n      }\n    })); // setData(map);\n\n    console.log(map);\n  }, [labelClicked]);\n\n  function handleChange({\n    target\n  }) {\n    const {\n      value\n    } = target;\n    setSelected(value);\n  }\n\n  function statusChange({\n    target\n  }) {\n    const {\n      value\n    } = target;\n    setStatus(value);\n  }\n\n  function labelChange({\n    target\n  }) {\n    const {\n      value\n    } = target;\n    setLabel(value);\n  }\n\n  function statusClick() {\n    setStatusClicked(status);\n  }\n\n  function handleClick() {\n    setClicked(selected);\n  }\n\n  function labelClick() {\n    setLabelClicked(label);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"divInicial\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"label-input\",\n      children: [\"Labels:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-testid\": \"label-input\",\n        id: \"label-input\",\n        value: label,\n        onChange: labelChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: labelClick,\n      children: \"Pesquisar Labels\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"status-input\",\n      children: [\"Status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"status\",\n        \"data-testid\": \"status-input\",\n        id: \"status-input\",\n        value: status,\n        onChange: statusChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"open\",\n          children: \"Abertos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"closed\",\n          children: \"Fechados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: statusClick,\n      children: \"Filtrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"selected-input\",\n      children: [\"Ordenar por:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"selected\",\n        \"data-testid\": \"selected-input\",\n        id: \"selected-input\",\n        value: selected,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"comentados\",\n          children: \"Mais comentados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"recentes\",\n          children: \"Mais Recentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"antigos\",\n          children: \"Mais Antigos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Ordenar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), data.filter(element => element.state === statusClicked).map((post, index) => /*#__PURE__*/_jsxDEV(Issues, {\n      postagem: post\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Comp, \"2nAKdXZlZ5SttYmzuE/yj8RL5CQ=\");\n\n_c = Comp;\n;\n/*  return (\n    <div className=\"divInicial\">\n      <select name=\"selected\"\n            data-testid=\"selected-input\"\n            id=\"selected-input\"\n            value={ selected }\n            onChange={ handleChange }>\n        <option value=\"comentados\">Mais comentados</option>\n        <option value=\"recentes\">Mais Recentes</option>\n      </select>\n      <button onClick= {handleClick}>Filtrar</button>\n      {console.log(comments)}\n      {clicked !== \"comentados\" ? (data.map((post, index) => (\n    <Issues key={index} postagem={post} />\n  ))) : (comments.map((post, index) => (\n    <MoreComments key={index} postagem={post} />\n  )))} \n  )*/\n\nexport default Comp;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comp\");","map":{"version":3,"sources":["/home/berna/Área de Trabalho/desafio-configr-teste/src/components/Comp.js"],"names":["React","useState","useEffect","Issues","Comp","data","setData","selected","setSelected","clicked","setClicked","status","setStatus","statusClicked","setStatusClicked","label","setLabel","labelClicked","setLabelClicked","apiFetch","fetchApi","fetch","then","response","json","result","map","elem","elemLimpo","title","labels","comments","state","created_at","push","mapComments","sort","a","b","mapOlders","mapNews","console","log","forEach","element","includes","handleChange","target","value","statusChange","labelChange","statusClick","handleClick","labelClick","filter","post","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Issues from './Issues';\n\nfunction Comp(){\n  const [data, setData] = useState([]);\n  const [selected, setSelected] = useState('');\n  const [clicked, setClicked] = useState('');\n  const [status, setStatus] = useState('open');\n  const [statusClicked, setStatusClicked] = useState('open');\n  const [label, setLabel] = useState('');\n  const [labelClicked, setLabelClicked] = useState('');\n\n  function apiFetch() {\n    const fetchApi = fetch(\"https://api.github.com/repos/facebook/react/issues\")\n    .then((response) => response.json())\n   .then((result) => {\n      const data = [];\n      result.map((elem) => {\n        const elemLimpo = {\n          title: elem.title ,\n          labels: elem.labels,\n          comments: elem.comments,\n          state: elem.state,\n          created_at: elem.created_at,\n        }\n        data.push(elemLimpo);\n      });\n      return setData(data)\n    });\n    return fetchApi;\n  }\n\n  function mapComments() {\n    data.sort(function(a,b) {\n      return b.comments > a.comments ? 1 : a.comments > b.comments ? -1 : 0;\n  });\n  setData([...data]);\n  }\n\n  function mapOlders() {\n    data.sort(function(a,b) {\n      return a.created_at < b.created_at ? -1 : a.created_at > b.created_at ? 1 : 0;\n  });\n  setData([...data]);\n  }\n\n  function mapNews() {\n    data.sort(function(a,b) {\n      return b.created_at < a.created_at ? -1 : b.created_at > a.created_at ? 1 : 0;\n  });\n  setData([...data]);\n  }\n\n  useEffect(() => {\n    apiFetch();\n  },[]);\n\n  useEffect(() => { \n    if (clicked === 'comentados'){\n      console.log(data);\n      mapComments();\n      }\n    if (clicked === 'antigos'){\n      mapOlders();\n    }\n    if (clicked === 'recentes'){\n      mapNews();\n    }\n  },[clicked])\n\n  useEffect(() => {\n    {/*\n      Pegar o Label clicked\n      (1º nível - data) (forEach) Percorrer o array de issues na chave labels (array)\n      (2º nível - label) (filter com includes)Verificar caso a caso se a label bate com o item do array label\n    */}\n    console.log(label);\n    const map = [];\n    data\n      .forEach((element) => element.labels\n        .forEach((elem) => {\n          if (elem['name'].includes(label)) {\n            map.push(elem);\n          }\n        })\n      )\n      // setData(map);\n    console.log(map);\n  }, [labelClicked])\n\n  function handleChange({ target }){\n    const { value } = target;\n    setSelected( value );\n  }\n\n  function statusChange({ target }){\n    const { value } = target;\n    setStatus( value );\n  }\n\n  function labelChange({ target }){\n    const { value } = target;\n    setLabel( value );\n  }\n\n  function statusClick(){\n    setStatusClicked(status);\n  }\n\n  function handleClick(){\n    setClicked(selected);\n  }\n\n  function labelClick(){\n    setLabelClicked(label);\n  }\n\n    return(\n      <div className=\"divInicial\">\n        <label for=\"label-input\">Labels:\n        <input data-testid=\"label-input\"\n            id=\"label-input\"\n            value={ label }\n            onChange={ labelChange } />\n        </label>\n        <button onClick = {labelClick}>Pesquisar Labels</button>\n        <label for=\"status-input\">Status:\n        <select name=\"status\"\n            data-testid=\"status-input\"\n            id=\"status-input\"\n            value={ status }\n            onChange={ statusChange }>\n              <option value=\"open\">Abertos</option>\n              <option value=\"closed\">Fechados</option>\n            </select>\n        </label>\n        <button onClick = {statusClick}>Filtrar</button>\n        <label for=\"selected-input\">Ordenar por:\n      <select name=\"selected\"\n            data-testid=\"selected-input\"\n            id=\"selected-input\"\n            value={ selected }\n            onChange={ handleChange }>\n        <option value=\"comentados\">Mais comentados</option>\n        <option value=\"recentes\">Mais Recentes</option>\n        <option value=\"antigos\">Mais Antigos</option>\n      </select>\n      </label>\n      <button onClick= {handleClick}>Ordenar</button>\n      {\n        data.filter(\n          (element) => element.state === statusClicked)\n            .map((post, index) => (\n            <Issues key={index} postagem={post} />\n          ))\n      }\n  </div>\n    )\n};\n\n/*  return (\n    <div className=\"divInicial\">\n      <select name=\"selected\"\n            data-testid=\"selected-input\"\n            id=\"selected-input\"\n            value={ selected }\n            onChange={ handleChange }>\n        <option value=\"comentados\">Mais comentados</option>\n        <option value=\"recentes\">Mais Recentes</option>\n      </select>\n      <button onClick= {handleClick}>Filtrar</button>\n      {console.log(comments)}\n      {clicked !== \"comentados\" ? (data.map((post, index) => (\n    <Issues key={index} postagem={post} />\n  ))) : (comments.map((post, index) => (\n    <MoreComments key={index} postagem={post} />\n  )))} \n  )*/\n\nexport default Comp;"]},"metadata":{},"sourceType":"module"}